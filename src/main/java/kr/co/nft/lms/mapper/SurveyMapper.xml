<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nft.lms.mapper.SurveyMapper">

		<select id="selectSurveyListByPage"
				resultType="map">
			SELECT
				l.lecture_no lectureNo
				,l.lecture_name lectureName
				,s.survey_no surveyNo
				,s.survey_title surveyTitle
				,s.survey_content surveyContent
				,s.survey_create_date surveyCreateDate
				,s.survey_update_date surveyUpdateDate
				,s.survey_startline_date surveyStartlineDate
				,s.survey_deadline_date surveyDeadlineDate
				,s.member_id memberId
				,s.lecture_no
			FROM lecture AS l
			INNER JOIN survey AS s
			WHERE l.lecture_no = #{lectureNo}
			ORDER BY lecture_no
		</select>
		
		<select id="countSurvey" resultType="int">
			SELECT count(*) from survey
		</select>
		
		<select id="selectSurveyQuestionListByPage"
				parameterType="java.util.Map"
				resultType="kr.co.nft.lms.vo.SurveyQuestionList">
			SELECT
				survey_question_list_no surveyQuestionListNo
				,survey_question_list_name surveyQuestionListName
				,survey_question_list_content surveyQuestionListContent
				,survey_question_list_create_date surveyQuestionListCreateDate
				,survey_question_list_update_date surveyQuestionListUpdateDate
				FROM survey_question_list
				ORDER BY survey_question_list_no
				LIMIT #{beginRow}, #{rowPerPage}
		
		</select>
		
		<select id="countSurveyList" resultType="int">
			select count(*) from survey_question_list
		</select>
		
		
		<select id="selectSurveyQuestionList"
				parameterType="java.util.List"
				resultType="kr.co.nft.lms.vo.SurveyQuestionList">
			SELECT
				survey_question_list_no surveyQuestionListNo
				,survey_question_list_name surveyQuestionListName
				,survey_question_list_content surveyQuestionListContent
				FROM survey_question_list
				ORDER BY survey_question_list_no
		</select>
		
		
		<insert id="insertSurvey"
				parameterType="kr.co.nft.lms.vo.Survey">
			<selectKey resultType="int" keyProperty="surveyNo" order="AFTER">
				SELECT last_insert_id()
			</selectKey>
			INSERT INTO survey(
				survey_title
				,survey_content
				,survey_create_date
				,survey_update_date
				,survey_startline_date
				,survey_deadline_date
				,lecture_no
				,member_id
			) VALUES (
				#{surveyTitle}
				,#{surveyContent}
				,NOW()
				,NOW()
				,#{surveyStartlineDate}
				,#{surveyDeadlineDate}
				,#{lectureNo}
				,#{memberId}
			)
		</insert>
		
		<insert id="insertSurveyQuestionList"
				parameterType="kr.co.nft.lms.vo.Survey">
			INSERT INTO survey_question_list(
				survey_question_list_name
				,survey_question_list_content
				,survey_question_list_create_date
				,survey_question_list_update_date
			) VALUES (
				#{surveyQuestionListName}
				,#{surveyQuestionListContent}
				,NOW()
				,NOW()
			)
		</insert>
		
		<insert id="insertSurveyQuestion"
				parameterType="kr.co.nft.lms.vo.SurveyQuestion">
			INSERT INTO survey_question(
				survey_question_no
				,survey_no
				,survey_question_list_no
				,survey_question_content
				,survey_question_type
				,survey_question_create_date
				,survey_question_update_date
			) VALUES(
				#{surveyQuestionNo}
				,#{surveyNo}
				,#{surveyQuestionListNo}
				,#{surveyQuestionContent}
				,#{surveyQuestionType}
				,NOW()
				,NOW()
			)
		</insert>
		
		<select id="selectSurveyList"
				parameterType="java.util.Map"
				resultType="kr.co.nft.lms.vo.Survey">
			SELECT
				survey_no surveyNo
				,survey_title surveyTitle
				,survey_content surveyContent
				,survey_create_date surveyCreateDate
				,survey_update_date surveyUpdateDate
				,survey_startline_date surveyStartlineDate
				,survey_deadline_date surveyDeadlineDate
				,lecture_no lectureNo
				,member_id memberId
				FROM survey
				ORDER BY survey_no
		</select>
		
		<select id="getSurveyOne"
				parameterType="int"
				resultType="kr.co.nft.lms.vo.Survey">
			SELECT
				survey_no surveyNo
				,survey_title surveyTitle
				,survey_content surveyContent
				,survey_create_date surveyCreateDate
				,survey_update_date surveyUpdateDate
				,survey_startline_date surveyStartlineDate
				,survey_deadline_date surveyDeadlineDate
				,lecture_no lectureNo
				,member_id memberId
				FROM survey
				WHERE survey_no = #{surveyNo}
		</select>
		
		<select id="getSurveyQuestionList"
				resultType="map">
				SELECT
					a.survey_question_no surveyQuestionNo
					,a.survey_no surveyNo
					,a.survey_question_list_no surveyQuestionListNo
					,a.survey_question_content surveyQuestionContent
					,a.survey_question_type surveyQuestionType
					,a.survey_question_create_date surveyQuestionCreateDate
					,a.survey_question_update_date surveyQuestionUpdateDate
					,b.survey_question_list_name surveyQuestionListName
					,b.survey_question_list_content surveyQuestionListContent
					,b.survey_question_list_create_date surveyQuestionListCreateDate
					,b.survey_question_list_update_date surveyQuestionListUpdateDate
				FROM survey_question AS a
				INNER JOIN survey_question_list AS b
				ON a.survey_question_list_no = b.survey_question_list_no
				WHERE a.survey_no = #{surveyNo}
				ORDER BY survey_question_no
		</select>
		
		<insert id="insertSurveyMultipleAnswer"
				parameterType="kr.co.nft.lms.vo.SurveyAnswer">
			INSERT INTO survey_multiple_answer(
				survey_question_no
				,survey_no
				,member_id
				,survey_answer_type
				,survey_multiple_answer_content
				,survey_multiple_answer_create_date
				,survey_multiple_answer_update_date
			) VALUES (
				#{surveyQuestionNo}
				,#{surveyNo}
				,#{memberId}
				,#{surveyAnswerType}
				,#{surveyMultipleAnswerContent}
				,NOW()
				,NOW()
			)
		</insert>
		
		
		<insert id="insertSurveyShortAnswer"
				parameterType="kr.co.nft.lms.vo.SurveyAnswer">
			INSERT INTO survey_short_answer(
				survey_question_no
				,survey_no
				,member_id
				,survey_answer_type
				,survey_short_answer_content
				,survey_short_answer_create_date
				,survey_short_answer_update_date
			) VALUES (
				#{surveyQuestionNo}
				,#{surveyNo}
				,#{memberId}
				,#{surveyAnswerType}
				,#{surveyShortAnswerContent}
				,NOW()
				,NOW()
			)
		</insert>
		
		<select id="getAllSurveyAnswer"
				resultType="map">
			SELECT
				sq.survey_question_list_no surveyQuestionListNo
				,sq.survey_no surveyNo
				,sq.survey_question_no surveyQuestionNo
				,ql.survey_question_list_name surveyQuestionListName
				,IFNULL(sm.member_id,ss.member_id) memberId
				,IFNULL(sm.survey_answer_type,ss.survey_answer_type) surveyAnswerType
				,sm.survey_multiple_answer_content surveyMultipleAnswerContent
				,ss.survey_short_answer_content surveyShortAnswerContent
			FROM survey_question sq
			LEFT OUTER JOIN survey_question_list ql ON sq.survey_question_list_no = ql.survey_question_list_no
			LEFT OUTER JOIN survey_multiple_answer sm ON sq.survey_question_no = sm.survey_question_no
			LEFT OUTER JOIN survey_short_answer ss ON sq.survey_question_no = ss.survey_question_no
			ORDER BY sq.survey_question_list_no
		</select>
		
		<select id="getAnswerAverage"
				resultType="map"
				parameterType="int">
			SELECT
			AVG(survey_multiple_answer_content) surveyMultipleAnswerContent
			FROM survey_multiple_answer
			WHERE survey_question_no = #{surveyQuestionNo}
		</select>
		
		<select id="getAnswerCount"
				resultType="map">
			SELECT
				COUNT(CASE WHEN survey_multiple_answer_content = 1 THEN 1 END)  surveyMultipleAnswerContent1
				,COUNT(CASE WHEN survey_multiple_answer_content = 2 THEN 1 END)  surveyMultipleAnswerContent2
				,COUNT(CASE WHEN survey_multiple_answer_content = 3 THEN 1 END)  surveyMultipleAnswerContent3
				,COUNT(CASE WHEN survey_multiple_answer_content = 4 THEN 1 END)  surveyMultipleAnswerContent4
				,COUNT(CASE WHEN survey_multiple_answer_content = 5 THEN 1 END)  surveyMultipleAnswerContent5
			FROM survey_multiple_answer 
			WHERE survey_question_no = #{surveyQuestionNo}
		</select>
</mapper>