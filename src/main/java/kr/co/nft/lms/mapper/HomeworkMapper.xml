<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nft.lms.mapper.HomeworkMapper">

	<!-- 과제 리스트 -->
	<select id="selectHomeworkListByPage"
			parameterType="java.util.Map"
			resultType="kr.co.nft.lms.vo.Homework">
		SELECT
			homework_no homeworkNo
			,member_id memberId
			,lecture_no lectureNo
			,homework_title homeworkTitle
			,homework_content homeworkContent
			,homework_start_date homeworkStartDate
			,homework_end_date homeworkEndDate
			,homework_create_date homeworkCreateDate
			,homework_update_date homeworkUpdateDate
		FROM homework
		ORDER BY homework_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 과제 상세보기 -->
	<select id="selectHomeworkOne"
			parameterType="int"
			resultType="kr.co.nft.lms.vo.Homework">
		SELECT
			homework_no homeworkNo
			,homework_title homeworkTitle
			,lecture_no lectureNo
			,member_id memberId
			,homework_content homeworkContent
			,homework_create_date homeworkCreateDate
		FROM homework
		WHERE homework_no = #{homeworkNo}
			
	</select>
	
	<!-- 과제 입력 -->
	<insert id="insertHomework"
			parameterType="kr.co.nft.lms.vo.Homework">
			<selectKey resultType="int" keyProperty="homeworkNo" order="AFTER">
				SELECT LAST_INSERT_ID()
			</selectKey>
		INSERT INTO homework(
			member_id
			,lecture_no
			,homework_title
			,homework_content
			,homework_start_date
			,homework_end_date
			,homework_create_date
			,homework_update_date 
		)VALUES(			
			#{memberId}
			,#{lectureNo}
			,#{homeworkTitle}
			,#{homeworkContent}
			,#{homeworkStartDate}
			,#{homeworkEndDate}
			,NOW()
			,NOW()
		)
	</insert>
	
	<!-- 과제 수정 -->
	<update id="updateHomework"
			parameterType="kr.co.nft.lms.vo.Homework">
		UPDATE homework SET
			homework_title = #{homeworkTitle}
			,homework_content = #{homeworkContent}
			,homework_start_date = #{homeworkStartDate}
			,homework_end_date = #{homeworkEndDate}
			,homework_update_date = NOW()
		WHERE homework_no = #{homeworkNo}
	</update>
	
	<!-- 과제 삭제 -->
	<delete id="deleteHomework"
			parameterType="int">
		DELETE FROM homework
		WHERE homework_no = #{homeworkNo}
	</delete>

	<!-- 과제 총 갯수 -->
	<select id="selectTotalCount"
			resultType="int">
		SELECT COUNT(*) FROM homework
	
	</select>
	
	<!-- 학생의 과제 제출 mapper.xml -->
	<!-- 학생 과제 제출 리스트 -->
	
	<!-- <resultMap type="Homework" id="Homework">
		<result column="homework_no" property="homeworkNo"></result>
		<result column="member_id" property="memberId"></result>
		<result column="lecture_no" property="lectureNo"></result>
	</resultMap>
	
	<resultMap type="kr.co.nft.lms.vo.HomeworkSubmit" id="kr.co.nft.lms.vo.HomeworkSubmit">
		<result column="homework_submit_no" property="homeworkSubmitNo"></result>
		<result column="homework_no" property="homeworkNo"></result>
		<result column="member_id" property="memberId"></result>
		<result column="homework_submit_title" property="homeworkSubmitTitle"></result>
		<result column="homework_submit_content" property="homeworkSubmitContent"></result>
		<result column="homework_submit_score" property="homeworkSubmitScore"></result>
		<result column="homework_submit_feedback" property="homeworkSubmitFeedback"></result>
		<result column="homework_submit_create_date" property="homeworkSubmitCreateDate"></result>
		<result column="homework_submit_update_date" property="homeworkSubmitUpdateDate"></result>
		<collection property="homework" resultMap="kr.co.nft.lms.vo.HomeworkSubmit"></collection>
	</resultMap> -->
	
	<select id="selectHomeworkSubmitListByPage"
			parameterType="java.util.Map"
			resultType="kr.co.nft.lms.vo.HomeworkSubmit">
		SELECT
			hs.homework_submit_no homeworkSubmitNo
			,hs.homework_no homeworkNo
			,hs.member_id memberId
			,h.lecture_no lectureNo
			,hs.homework_submit_title homeworkSubmitTitle
<!-- 			,hs.homework_submit_content homeworkSubmitContent -->
			,hsf.homework_submit_file_name homeworkSubmitFileName
<!-- 			,hs.homework_submit_score homeworkSubmitScore -->
<!-- 			,hs.homework_submit_feedback homeworkSubmitFeedback -->
			,hs.homework_submit_create_date homeworkSubmitCreateDate
			,hs.homework_submit_update_date homeworkSubmitUpdateDate
		FROM homework_submit hs
		INNER JOIN homework h
		ON hs.homework_no = h.homework_no
		INNER JOIN student_lecture sl
		ON hs.member_id = sl.member_id		
		INNER JOIN homework_submit_file hsf
		ON hs.homework_submit_no = hsf.homework_submit_no
		ORDER BY hs.homework_submit_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 학생 과제 총 갯수 -->
	<select id="selectSubmitTotalCount"
			resultType="int">
		SELECT COUNT(*) FROM homework_submit
	</select>
	
	<!-- 학생 과제 상세보기 -->
	<select id="selectHomeworkSubmitOne">
		SELECT
			hs.homework_submit_no homeworkSubmitNo
			,hs.homework_no homeworkNo
			,h.lecture_no lectureNo
			,hs.member_id memberId
			,hs.homework_submit_title homeworkSubmitTitle
			,hs.homework_submit_content homeworkSubmitContent
			,hsf.homework_submit_file_name homeworkSubmitFileName
<!-- 			,hsf.homework_submit_file_type homeworkSubmitFileType -->
			,hs.homework_submit_score homeworkSubmitScore
			,hs.homework_submit_feedback homeworkSubmitFeedback
			,hs.homework_submit_create_date homeworkSubmitCreateDate
			,hs.homework_submit_update_date homeworkSubmitUpdateDate
		FROM homework_submit hs
		INNER JOIN homework h
		ON hs.homework_no = h.homework_no
		INNER JOIN student_lecture sl
		ON hs.member_id = sl.member_id		
		INNER JOIN homework_submit_file hsf
		ON hs.homework_submit_no = hsf.homework_submit_no
<!-- 		WHERE hs.member_id = #{memberId} -->
	
	</select>
	
	<!-- 학생 과제 제출 -->
	<insert id="insertHomeworkSubmit"
			parameterType="kr.co.nft.lms.vo.HomeworkSubmit">
			<selectKey resultType="int" keyProperty="homeworkSubmitNo" order="AFTER">
				SELECT LAST_INSERT_ID()
			</selectKey>
		INSERT INTO homework_submit(
			homework_no
			,member_id
			,homework_submit_title
			,homework_submit_content
			<!-- ,homework_submit_score
			,homework_submit_feedback -->
			,homework_submit_create_date
			,homework_submit_update_date
		) VALUES (
			#{homeworkNo}
			,#{memberId}
			,#{homeworkSubmitTitle}
			,#{homeworkSubmitContent}
			<!-- ,#{homeworkSubmitScore}
			,#{homeworkSubmitFeedback -->
			,NOW()
			,NOW()
		)
				
	</insert>
	
	<!-- 학생 파일 제출 -->
	<insert id="insertHomeworkSubmitFile"
			parameterType="kr.co.nft.lms.vo.HomeworkSubmitFile">
			<selectKey resultType="int" keyProperty="homeworkSubmitFileNo" order="AFTER">
				SELECT LAST_INSERT_ID()
			</selectKey>
		INSERT INTO homework_submit_file(
			homework_submit_no
			,homework_submit_file_original
			,homework_submit_file_name
			,homework_submit_file_size
			,homework_submit_file_type
			,homework_submit_file_create_date
			,homework_submit_file_update_date
		) VALUES (
			#{homeworkSubmitNo}
			,#{homeworkSubmitFileOriginal}
			,#{homeworkSubmitFileName}
			,#{homeworkSubmitFileSize}
			,#{homeworkSubmitFileType}
			,NOW()
			,NOW()
		)
		
	</insert>
	<update id="updateHomeworkSubmit">
	
	</update>

	<delete id="deleteHomeworkSubmit">
	
	</delete>

	<!-- 과제 점수와 피드백 입력을 위한 쿼리 -->
	<update id="updateHomeworkSubmitScore"
			parameterType="kr.co.nft.lms.vo.HomeworkSubmit">
		UPDATE 
			homework_submit
		SET 
			homework_submit_score = #{homeworkSubmitScore}
 			,homework_submit_feedback = #{homeworkSubmitFeedback} 
		WHERE 
			homework_submit_no = #{homeworkSubmitNo}
	</update>
</mapper>