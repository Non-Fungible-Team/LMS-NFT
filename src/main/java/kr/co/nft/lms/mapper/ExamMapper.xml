<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nft.lms.mapper.ExamMapper">

<!-- 시험문제 리스트  -->	
	<select id="selectExamListByPage"
			parameterType="java.util.Map"
			resultType="kr.co.nft.lms.vo.Exam">
			SELECT 
				exam_no 			examNo
				,exam_title 		examTitle
				,exam_count 		examCount
				,exam_max_score 	examMaxScore
				,exam_start_date 	examStartDate
				,exam_end_date 		examEndDate
			FROM exam
			ORDER BY exam_no ASC
			LIMIT #{beginRow}, #{rowPerPage};
	</select>
<!--  시험문제 수 -->
	<select id="countExam"
			resultType="int">
		SELECT count(*) 
		FROM exam
	</select>
	
<!-- 시험 상세보기 		 	 -->
	<select id="selectExamOne"
			parameterType="java.util.Map"
			resultType="kr.co.nft.lms.vo.Exam">
			SELECT	e.lecture_no			lectureNo
					,e.member_id			memberId
					,e.exam_no				examNo
					,e.exam_title			examTitle
					,e.exam_count			examCount
					,e.exam_max_score		examMaxScore
					,e.exam_start_date		examStartDate
					,e.exam_end_date		examEndDate
			FROM exam e
			GROUP BY e.exam_no
			HAVING e.exam_no = #{examNo};
	</select>
<!-- 	문제보기 상세보기  -->
	<select id="selectExamQuestionOne"
			parameterType="java.util.Map"
			resultType="kr.co.nft.lms.vo.ExamQuestion">
			SELECT	 eq.exam_question_no 		examQuestionNo
					,eq.exam_content 			examContent
					,eq.exam_correct_answer 	examCorrectAnswer
					,eq.exam_point 				examPoint
					,eq.exam_type 				examType
					,eq.exam_no 				examNo
			FROM exam_question eq
			HAVING eq.exam_no = #{examNo};
		</select>
<!-- 	보기 상세보기  -->
	<select id="selectExamExampleOne"
			parameterType="int"
			resultType="kr.co.nft.lms.vo.ExamExample">
			SELECT	 exam_question_no 		examQuestionNo
					,example_no				exampleNo
					,example_content		exampleContent
					,exam_no				examNo
			FROM exam_example
			WHERE exam_no = #{examNo} and exam_question_no = #{examQuestionNo};
			
	</select>


<!-- 시험 등록  -->
	<insert id="insertExam"
			parameterType="kr.co.nft.lms.vo.Exam">
<!--		시험 등록 -->
			INSERT INTO exam( 		
							member_id 
							,lecture_no
							,exam_title
							,exam_count
							,exam_max_score
							,exam_start_date
							,exam_end_date
							,exam_create_date
							,exam_Update_date
			) VALUES (		
							'wldnd'
							,1
							,#{examTitle}
							,#{examCount}
							,#{examMaxScore}
							,#{examStartDate}
							,#{examEndDate}
							,NOW()
							,NOW()		
			);
	</insert>
<!-- 문제 등록  -->
	<insert id="insertExamQuestion"
			parameterType="kr.co.nft.lms.vo.Exam">
			<selectKey resultType="int" keyProperty="examNo" order="BEFORE">
				SELECT MAX(exam_no) FROM exam
			</selectKey>
			INSERT INTO exam_question(	 exam_no			
										,exam_question_no
										,exam_content
										,exam_correct_answer
										,exam_point
										,exam_type
										,exam_question_create_date
										,exam_question_update_date
			) VALUES(					#{examNo}
										,#{examQuestionNo}
										,#{examContent}
										,#{examCorrectAnswer}
										,#{examPoint}
										,#{examType}
										,NOW()
										,NOW()
			);	
	</insert>
<!-- 보기 등록  -->
	<insert id="insertExamExample"
			parameterType="kr.co.nft.lms.vo.Exam">
			<selectKey resultType="int" keyProperty="examNo" order="BEFORE">
				SELECT MAX(exam_no) FROM exam
			</selectKey>
			INSERT INTO exam_example(	 exam_no		
										,exam_question_no
										,example_no
										,example_content
										,example_create_date
										,example_update_date
			) VALUES( 					#{examNo}
										,#{examQuestionNo}
										,#{exampleNo}
										,#{exampleContent}
										,NOW()
										,NOW()
			);	
	</insert>
	
<!-- 시험 수정  -->
	<update id="updateExam"
			parameterType="kr.co.nft.lms.vo.Exam">
		UPDATE exam SET
			exam_title = #{examTitle}
			,exam_count= #{examCount}
			,exam_max_score= #{examMaxScore}
			,exam_start_date = #{examStartDate}
			,exam_end_date = #{examEndDate}
			,exam_update_date = NOW()
		WHERE exam_no = #{examNo}
	</update>
<!-- 문제 수정  -->
	<update id="updateExamQuestion"
			parameterType="kr.co.nft.lms.vo.ExamQuestion">
		UPDATE exam_question SET
			exam_question_no = #{examQuestionNo}
			,exam_content = #{examContent}
			,exam_correct_answer= #{examCorrectAnswer}
			,exam_point= #{examPoint}
			,exam_type = #{examType}
			,exam_update_date = NOW()
		WHERE exam_no = #{examNo}
	</update>
<!-- 보기 수정  -->
	<update id="updateExamExample"
			parameterType="kr.co.nft.lms.vo.ExamExample">
		UPDATE exam_example SET
			exam_question_no = #{examQuestionNo}
			,example_no= #{exampleNo}
			,example_content = #{exampleContent}
			,example_update_date = NOW()
		WHERE exam_no = #{examNo}
	</update>
	
	
	<delete id="deleteExam"
			parameterType="int">
			SET AUTOCOMMIT = FALSE; 	<!-- 오토커밋 해제 -->
<!-- 		시험 삭제 -->
			DELETE FROM exam
			WHERE exam_no = #{examNo}
<!--		시험문제 삭제 -->
			DELETE FROM exam_question
			WHERE exam_no = #{examNo}
<!--		보기 삭제		 -->
			DELETE FROM exam_example
			WHERE exam_no = #{examNo}
			SET AUTOCOMMIT = TRUE; 		<!--오토커밋 설정  -->
	</delete>
	

			
			
		
	

</mapper>
	