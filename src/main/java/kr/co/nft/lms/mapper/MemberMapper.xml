<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nft.lms.mapper.MemberMapper">

	<select id="selectTeacherList"
			resultType="kr.co.nft.lms.vo.Teacher">
		SELECT 	
			member_id memberId
			, teacher_entry_date teacherEntryDate
			, teacher_subject teacherSubject
			, teacher_name teacherName
			, teacher_birth teacherBirth
			, teacher_gender teacherGender
			, teacher_email teacherEmail
			, photo_no photoNo
			, address_detail addressDetail
		FROM teacher	
	</select>
	
	<insert id="insertLevelHistoryOfStudentRecord"
			parameterType="kr.co.nft.lms.vo.Member">
		INSERT INTO level_history (
			member_id
			, level_history_new_level
			, level_history_reason
			, member_id2
			, level_history_update_date
		) VALUES (
			#{memberId}
			, -4
			, NULL
			, 'system'
			, NOW() 
		);
	</insert>

	<update id="updateStudentOfMemberTbl"
			parameterType="kr.co.nft.lms.vo.Member">
		UPDATE member SET 
			member_level = -4
		WHERE member_id = #{memberId}	
	</update>

	<update id="updateStudentOfStudentTbl"
			parameterType="kr.co.nft.lms.vo.Member">
		UPDATE student SET 
			member_level = -4
		WHERE member_id = #{memberId}
	</update>

	
	<insert id="insertMemberPhoto"
			parameterType="kr.co.nft.lms.vo.MemberPhoto">
		
		INSERT INTO member_photo (
			member_id
			, photo_name
			, photo_origin_name
			, photo_type
			, photo_size
			, photo_create_date
			, photo_update_date
		) VALUES (
			#{memberId}
			, #{photoName}
			, #{photoOriginName}
			, #{photoType}
			, #{photoSize}
			, NOW()
			, NOW()
		);
	</insert>

	<update id="updateStudentByMemberVo"
			parameterType="kr.co.nft.lms.vo.Member">
		UPDATE member SET 
			member_pw = #{memberPw}
			, member_phone_no = #{memberPhoneNo} 
		WHERE member_id = #{memberId} 		
	</update>

	<update id="updateStudentByStudentVo"
			parameterType="kr.co.nft.lms.vo.Student">
		UPDATE student SET 
			student_name = #{studentName}
			, student_birth = #{studentBirth}
			, student_gender = #{studentGender}
			, student_email = #{studentEmail}
			, student_education = #{studentEducation}
		WHERE member_id = #{memberId} 
				
	</update>

	<select id="selectStudentOneByMemberVo"
			parameterType="kr.co.nft.lms.vo.Member"
			resultType="kr.co.nft.lms.vo.Member">
		SELECT 
			member_id memberId
			, member_phone_no memberPhoneNo
			, member_last_login_date memberLastLoginDate
			, member_pw memberPw 
		FROM member 
		WHERE member_id = #{memberId} 
	</select>

	<select id="selectStudentOneByStudentVo"
			parameterType="kr.co.nft.lms.vo.Member"
			resultType="kr.co.nft.lms.vo.Student">
		SELECT 
			student_name studentName
			, student_birth studentBirth
			, student_gender studentGender
			, student_email studentEmail 
			, student_education studentEducation 
			
		FROM student 
		WHERE member_id = #{memberId} 
	</select>
		
	<insert id="insertStudentByStudentVo"
			parameterType="kr.co.nft.lms.vo.Student">
		INSERT INTO student (
			member_id
			, student_education
			, student_name
			, student_birth
			, student_gender
			, student_email 
			, address_detail 
		) VALUES (
			#{memberId}
			, #{studentEducation}
			, #{studentName}
			, #{studentBirth}
			, #{studentGender}
			, #{studentEmail}
			, #{addressDetail}
		)
				
	</insert>

	<insert id="insertStudentByMemberVo"
			parameterType="kr.co.nft.lms.vo.Member">
			
		INSERT INTO member(
			member_id
			, member_pw
			, member_pw_update_date 
			, member_phone_no
			, member_level
			, member_last_login_date
			, member_create_date
			, member_update_date 
		) VALUES (
			#{memberId}
			, password(#{memberPw})
			,NOW()
			,#{memberPhoneNo}
			,#{memberLevel}
			,NOW()
			,NOW()
			,NOW()
		)
		
	</insert>

	<select id="selectMemberOne"
			parameterType="kr.co.nft.lms.vo.Member"
			resultType="kr.co.nft.lms.vo.Member">
		SELECT 
			member_id memberId
			, member_level memberLevel
		FROM member	
		WHERE member_id = #{memberId} and member_pw = password(#{memberPw})
	</select>

	<insert id="insertMember"
			parameterType="int">
		INSERT INTO member(
			member_id memberId
			,member_pw memberPw
			,member_pw_update_date memberPwUpdateDate
			,member_phone_no memberPhoneNo
			,member_level memberLevel
			,member_last_login_date memberLastLoginDate
			,member_create_date memberCreateDate
			,member_update_date memberUpdateDate
		) VALUES (
			#{memberId}
			,#{memberPw}
			,#{memberPwUpdateDate}
			,#{memberPhoneNo}
			,#{memberLevel}
			,NOW()
			,NOW()
			,NOW()
		)
	</insert>
	
	<insert id="insertManager"
			parameterType="int">
		INSERT INTO manager(
			member_id memberId
			,manager_entry_date managerEntryDate
			,manager_name managerName
			,manager_birth managerBirth
			,manager_gender managerGender
			,manager_email managerEmail
			,address_detail addressDetail
		) VALUES (
			#{memberId}
			,NOW()
			,#{managerName}
			,#{managerBirth}
			,#{managerGender}
			,#{managerEmail}
			,#{addressDetail}
		)
		
	</insert>
	
	<select id="selectIdCheck"
			parameterType="int">
		SELECT * FROM member 
		WHERE member_id = #{memberId}
	</select>

</mapper>