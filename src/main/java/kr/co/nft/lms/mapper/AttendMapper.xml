<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nft.lms.mapper.AttendMapper">
	<!--1. 강의별 전체 학생 출석 목록 -->
	<select id="selectAttendList"
			resultType="kr.co.nft.lms.vo.Attend"
			parameterType="map">
	SELECT
		l.lecture_no lectureNo
		,l.lecture_name lectureName
		,a.member_id memberId
		,s.student_name studentName
		,attend_date attendDate
		,attend_status attendStatus
		,attend_reason attendReason
		,attend_create_date attendCreateDate
		,attend_update_date attendUpdateDate
	FROM attend a
	INNER JOIN student s
		ON a.member_id = s.member_id
	INNER JOIN lecture l 
		ON a.lecture_no = l.lecture_no
	WHERE l.lecture_no = #{lectureNo}
	AND a.attend_date = #{attendDate}
	ORDER BY s.student_name
	</select>
	
	<!-- 2.학생이 자기가 듣는 강의별 출석 확인 -->
	<select id="selectStudentAttendOne"
			resultType="kr.co.nft.lms.vo.Attend"
			parameterType="java.util.Map">
	SELECT
		l.lecture_no lectureNo
		,l.lecture_name lectureName
		,attend_date attendDate
		,attend_status attendStatus
		,attend_reason attendReason
		,attend_create_date attendCreateDate
		,attend_update_date attendUpdateDate
	FROM attend a
	INNER JOIN lecture l
		ON a.lecture_no = l.lecture_no
	ORDER BY l.lecture_no
	WHERE lecture_no = #{lectureNo}
	AND member_id = #{memberId}
	</select>
	
	<!-- 3.학생 출석 삽입 -->
	<insert id="insertAttend" 
			parameterType="kr.co.nft.lms.vo.Attend">
	INSERT INTO(
		 member_id
		 ,lecture_no
		 ,attend_date
		 ,attend_status
		 ,attend_reason
		 ,attend_create_date
		 ,attend_update_date
	)VALUES(
		#{memberId}
		,#{lectureNo}
		,#{attendDate}
		,#{attendStatus}
		,#{attendReason}
		,NOW()
		,NOW()
	)
	</insert>
	<!-- 4.학생 출석 수정 폼 -->
	<select id="updateAttendForm" 
			parameterType="String">
	SELECT
		l.lecture_no lectureNo
		,l.lecture_name lectureName
		,a.member_id memberId
		,s.student_name studentName
		,attend_date attendDate
		,attend_status attendStatus
		,attend_reason attendReason
		,attend_create_date attendCreateDate
		,attend_update_date attendUpdateDate
	FROM attend a
	INNER JOIN student s
		ON a.member_id = s.member_id
	INNER JOIN lecture l 
		ON a.lecture_no = l.lecture_no
	WHERE member_id = #{memberId}
	</select>
	
	<!-- 4.학생 출석 수정 액션 -->
	<update id="updateAttend"
			parameterType="kr.co.nft.lms.vo.Attend">
	UPDATE attend
	SET
		attend_status = #{attendStatus}
		,attend_reason =#{attendReason}
		,attend_update_date = NOW()
	WHERE member_id = #{memberId}
	</update>
	
	<!-- 5.학생 출석 삭제 -->
	<delete id="deleteAttend"
				parameterType="String">
	DELETE FROM attend 
	WHERE member_id =#{memberId}
	</delete>
	
	
</mapper>